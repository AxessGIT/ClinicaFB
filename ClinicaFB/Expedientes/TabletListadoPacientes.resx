<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAFgSURBVDhPzZJNK0RxFMbvzTCKsFHDSilJyW5KNpjYqFlQ
        dpPyDWzsvBSyYylZycLCxlLZUL6AHcVKmrwslA0mL79zz5ka1xw0FE/9+p/znOd/7nTvBH+pJuiBTqgW
        o1JlwjA8hBd4Ne5hg1mLRr6vmZIlx7AJO3Bl3g2ZtEa/1oRdylNn1ApqYBAaYJaZ/GpZmoJPVUvwGh6o
        u9WKNIInDzmj7uCct35Nx76yFly3vlT9+OdwQl3PeQt31FXR1FH07jjHtf2gAZv3ce5a3R5NyonAooWy
        6pTVECTIbVu2K3IdTVpoTltf5E6hQFmnTnmlCD3BJbV8UU/Fd71nvS9CRxbep21U953SzOSDPFP3quWI
        0KotK5KHBUZjkKPegoLM6KfkjitC8WUH8BjzhAvio3rLEaH4smUbNUMO5CNNwzAkwBeXV5xlFantN5eJ
        kiyR/5MsWzLvx0pCq5b/RkHwBtyJWTktUBPjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="cmdVer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAE/SURBVEhL7dS7SgNBGIbhRUEUiQdQSTSoJMRbEQIWdili
        oTZWVl6IlSiCQpqAjeglpLGyEs8oBrGwV8Rz3i/OyL9LEkIg3X7wwGZ2/pnZmSFBnDhdTy8WUcYDPvHh
        ng9QQB86yjyu8Ou8oOK8ujZ5xBLaTj924AeQTSTgM4Qt2D7HGEXLjOMEtnAbyhjWkaz/+ss+bN9rZNAw
        07iBLdCea9IRaN/VZvc8hW/YmifkEMos/ADWOZRV+LYNDGICSnRRUkUa/2k2wQWUFUTfFaHcIvpOXzGH
        UGZwD9vxC9rzYdy5NtFe6yum8OPaPC00i4ZRwRlswR4UncOaowmVEmzfU0yiZXQFj2ALdZM0gY+u4y5s
        H92oAbQdHewz/ABv0BUWPfv2S+TRUbSiZRxCN0N/E+/QwWp7FtCDOHG6liCoAXGLfScnjbjHAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="cmdSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAADtSURBVEhLzZbLCcJAFEVTgbrSZnQpWIALly4sw18fWoAL
        V4I1CHYhWoOILvTchIQk5DMzTsQLB4Zkck9gCC8B6cERnvD2xAvUqe5wUbTJB+pO3vwCO09cQZ3qTmy6
        4St7iHv/R9CGWbSsjbWgA2fQvrUu1MRa0Ic7xHvrJBmBaYZgKnESKKaSjGBiyRbih8skhWfwDXmJd8EK
        0skIxpZsIF2+hHycD3kED6gqV5wE+fIFlKXwDKo+tAGky+dQFWtBC05gUq5YCxRJptGyNk4Cm/xWoAGt
        hcacbvjgBuoMR2aTQ/8Ajfy2qIvyoPsB2MEWXMbIDKYAAAAASUVORK5CYII=
</value>
  </data>
</root>